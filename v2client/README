This is a validation client for use with the Yubico validation API version 2. To
pull in the dependency in a maven project do:

 <dependency>
   <groupId>com.yubico</groupId>
   <artifactId>yubico-validation-client2</artifactId>
   <version>2.0.1</version>
 </dependency>

A simplified implementation would be:

 // otp is the modhex otp from the yubikey
 // client_id is the clientId from https://upgrade.yubico.com/getapikey/
 boolean validate(String otp, int client_id) {
    YubicoClient client = YubicoClient.getClient(client_id);
    YubicoResponse response = client.verify(otp);
    if(response != null && response.getStatus() == YubicoResponseStatus.OK) {
      return true;
    }
    return false;
 }

After verifying the OTP you should make sure that the publicId part belongs to
the correct user. This can be done by keeping a mapping of username to
public id, for instance as the JAAS module does with it's user map
funcitonality.

For generic login cases the JAAS module can be easier to implement than using
the client API directly.

The validation client depends on slf4j-api for logging, to get the actual logs
and not receive warnings on STDOUT you will need to depend on a slf4j logger
binding, for example slf4j-log4j with the following maven configuration:

 <dependency>
  <groupId>org.slf4j</groupId>
  <artifactId>slf4j-log4j</artifactId>
  <version>1.6.1</version>
 </dependency>

For more complete descriptions of methods and failure states, please see
the javadoc.
